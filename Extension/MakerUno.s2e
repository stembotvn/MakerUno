{	
	"extensionName": "Maker Uno (Arduino Mode Only)",
	"description": "Maker Uno extension",
	"version": "1.1.0",
	"author": "Hien Phan",
	"homepage": "https://www.cytron.io/p-maker-uno",
	"sort":0,
	"javascriptURL":"js/makerUno.js",
  	"firmware":"1.0",
  	"extensionPort":0,
	"blockSpecs": [
	[
			"h",
			"Maker Uno Program",
			"runArduino",
			{
				"setup": "",
				"inc": "",
				"def": "",
				"work": "",
				"loop": ""
			}
		],
		[
			"w",
			"Reset all LEDs",
			"LEDreset",
			{
				"setup":"for (int i=0;i<=13;i++) {pinMode(i,OUTPUT);digitalWrite(i, 0);}\n",
				"inc":"",
				"def":"",
				"work":"",
				"loop":""
			}
		],
		[
			"w",
			"LED %d.LEDPin %d.onoff",
			"groveled",
			"L4",
			"on",
			{
				"setup":"pinMode({0},OUTPUT);\n",
				"inc":"",
				"def":"",
				"work":"digitalWrite({0}, {1});\n",
				"loop":""
			}
		],
		[
			"w",
			"buzzer play Note %d.note for duration %d.beats",
			"buzzer",
			"_C4",
			"_Half",
			{
				"setup":"pinMode(8,OUTPUT);\n",
				"inc":"",
				"def":"void buzzer_play_note(int note, int beat) {\ntone(8, note, beat);\nint pauseBetweenNotes = beat * 1.30;\ndelay(pauseBetweenNotes);\nnoTone(8);}\n",
				"work":"buzzer_play_note({0}, {1});\n",
				"loop":""
			}
		],
		[
			"B",
			"Built-in button pressed",
			"BuiltInButton",
			{
				"setup":"pinMode(2,INPUT_PULLUP); \n",
				"inc":"",
				"def":"",
				"work":"!digitalRead(2)",
				"loop":""
			}
		],
        

		[
		 "B",
		 "read digital pin %d.digital",
		 "getDigital","9",
		 {"setup":"pinMode({0},INPUT);\n",
		"inc":"",
		"def":"",
		"work":"digitalRead({0})",
		"loop":""}
		],
        
        [
        "R", 
        "read analog pin  %d.analog",
        "getAnalog","A0",
		{
		"setup":"",
		"inc":"",
		"def":"",
		"work":"analogRead({0})",
		"loop":""
			}
		],
		
		[
		"w",
		 "set digital pin %d.digital output as %d.level",
		 "runDigital",
		  "9", 
		  "HIGH",
		{
		"setup":"pinMode({0},OUTPUT);\n",
		"inc":"",
		"def":"",
		"work":"digitalWrite({0},{1});\n",
		"loop":""
			}
		],

		[
		"w",
		 "set pwm pin %d.pwmPin output as %n",
		 "runPwm", 
		 "D5",
		  0,
		{
		"setup":"pinMode({0},OUTPUT);\n",
		"inc":"",
		"def":"",
		"work":"analogWrite({0},{1});\n",
		"loop":""
		}
		],

        [
        "w", 
        "set servo pin %d.digital angle as %n",
        "runServoArduino",
         "D9",
          90,
		{
		"setup":"servo_{0}.attach({0}); // init pin\n",
		"inc":"#include <Servo.h>\n",
		"def":"Servo servo_{0};\n",
		"work":"servo_{0}.write({1}); // write to servo\n",
		"loop":""
			}
		], 
       
        ["w", "serial write text %s", "serialWrite", "hello",
		{"setup":"Serial.begin(115200);\n","inc":"","def":"","work":"Serial.println({0});\n","loop":""}],
		
		["R", "serial available bytes", "serialAvailable",
		{"setup":"Serial.begin(115200);\n","inc":"","def":"","work":"Serial.available()","loop":""}],
		
		["R", "serial read byte", "serialRead",
		{"setup":"Serial.begin(115200);\n","inc":"","def":"","work":"Serial.read()","loop":""}],

		["R", "timer","getTimer", "0",
		{"setup":"","inc":"","def":"double currentTime = 0;\ndouble lastTime = 0;\n--separator--double getLastTime(){\n\treturn currentTime = millis()/1000.0 - lastTime;\n}\n","work":"getLastTime()","loop":""}],
		
		["w", "reset timer","resetTimer", "0",
		{"setup":"","inc":"","def":"double currentTime = 0;\ndouble lastTime = 0;\n","work":"lastTime = millis()/1000.0;\n","loop":""}],

		[
			"R",
			"temperature sensor %d.analog",
			"tempSensor",
			"A0",
			{
				"setup":"",
				"inc":"",
				"def":"float grove_temperature_reading(float a){const int B=4275;float R=1023.0/((float)a)-1.0;R = 100000.0*R;return 1.0/(log(R/100000.0)/B+1/298.15)-273.15;}\n",
				"work":"grove_temperature_reading(analogRead(A{0}))",
				"loop":""
			}
		],
		[
			"R",
			"sound sensor %d.analog",
			"soundSensor",
			"A0",
			{
				"setup":"",
				"inc":"",
				"def":"int grove_sound_sensor_reading(int pin){long sum = 0;for(int i=0; i<32; i++){sum += analogRead(pin);}sum >>= 5;return sum;}\n",
				"work":"grove_sound_sensor_reading(A{0})",
				"loop":""
			}
		],
		[
			"R",
			"rotary angle sensor %d.analog",
			"rotaryAngleSensor",
			"A0",
			{
				"setup":"",
				"inc":"",
				"def":"",
				"work":"analogRead(A{0})",
				"loop":""
			}
		],
		[
			"R",
			"Piezo vibration sensor %d.analog",
			"vibrationSensor",
			"A0",
			{
				"setup":"",
				"inc":"",
				"def":"",
				"work":"analogRead(A{0})",
				"loop":""
			}
		],
		[
			"B",
			"Built-in button pressed",
			"digitalButton",
			{
				"setup":"pinMode(2,INPUT_PULLUP); \n",
				"inc":"",
				"def":"",
				"work":"!digitalRead(2)",
				"loop":""
			}
		],
		[
			"R",
			"touch sensor %d.digital pressed",
			"touchSensor",
			"D4",
			{
				"setup":"pinMode({0},INPUT); \n",
				"inc":"",
				"def":"",
				"work":"digitalRead({0})",
				"loop":""
			}
		],
		[
			"R",
			"3-axis digital accelerometer %d.axis",
			"accelerometer",
			"x",
			{
				"setup":"accelemeter.init(); \n",
				"inc":"#include \"MMA7660.h\"\n",
				"def":"MMA7660 accelemeter;\nfloat grove_accelemeter_0,grove_accelemeter_1,grove_accelemeter_2;\n",
				"work":"grove_accelemeter_{0}",
				"loop":"accelemeter.getAcceleration(&grove_accelemeter_0,&grove_accelemeter_1,&grove_accelemeter_2);\n"
			}
		]
	],
	"menus": {
	    "LEDPin":["L2","L3","L4","L5","L6","L7","L8","L9","L10","L11","L12","L13"],
		"digital":["D2","D3","D4","D5","D6","D7","D8","D9","D10","D11","D12","D13","A0_Digital","A1_Digital","A2_Digital","A3_Digital","A4_Digital","A5_Digital"],
		"analog":["A0","A1","A2","A3","A4","A5"],
		"pwmPin":["D3","D5","D6","D9","D10","D11"],
		"level":["HIGH","LOW"],
		"onoff":["on","off"],
		"axis":["x","y","z"],
		"note":["_C4","_D4","_E4","_F4","_G4","_A4","_B4","_C5","_D5","_E5","_F5","_G5","_A5","_B5"],
		"beats":["_Half","_Quarter","_Eighth","_Whole","_Double"]
	},
	"values":{
	    "L2":2,"L3":3,"L4":4,"L5":5,"L6":6,"L7":7,"L8":8,"L9":9,"L10":10,"L11":11,"L12":12,"L13":13,
		"D2":2,"D3":3,"D4":4,"D5":5,"D6":6,"D7":7,"D8":8,"D9":9,"D10":10,"D11":11,"D12":12,"D13":13,
		"A0_Digital":14,"A1_asDigital":15,"A2_Digital":16,"A3_Digital":17,"A4_Digital":18,"A5_Digital":19,
		"A0":0,"A1":1,"A2":2,"A3":3,"A4":4,"A5":5,"A6":6,"A7":7,
		"HIGH":1,
		"LOW":0,
		"on":1,
		"off":0,
		"x":0,"y":1,"z":2,
		"_C4":262,"_D4":294,"_E4":330,"_F4":349,"_G4":392,"_A4":440,"_B4":494,
			"_C5":523,"_D5":587,"_E5":659,"_F5":698,"_G5":784,"_A5":880,"_B5":988,
			"_Half":500,"_Quarter":250,"_Eighth":125,"_Whole":1000,"_Double":2000	
	},
	"translators":{
		"zh_CN":{
			"Demo Program":"演示程序",
			"HIGH":"高电平",
			"LOW":"低电平",
			"buzzer %d.digital play tone %d.tone for duration %n":"蜂鸣器 %d.digital 播放音调 %d.tone 时长 %n",
			"sound sensor %d.analog":"声音传感器 %d.analog",
			"rotary angle sensor %d.analog":"电位器 %d.analog",
			"Piezo vibration sensor %d.analog":"Piezo 振动传感器 %d.analog",
			"button %d.digital pressed":"按钮 %d.digital 被按下",
			"temperature sensor %d.analog":"温度传感器 %d.analog",
			"touch sensor %d.digital pressed":"触摸传感器 %d.digital 被按下",
			"3-axis digital accelerometer %d.axis":"3轴数字加速度传感器 %d.axis 轴",
            "blink":"闪烁"
		}
	}
}